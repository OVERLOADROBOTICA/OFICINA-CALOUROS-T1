int distanciamaxima; //Variável que receberá um valor máximo de interpretação para o sensor em cm
int posicaocm; //Variável que receberá o valor lido pelo sensor de onde está a mão em cm

int buzzer = 2;
int ledazul = 3;
int ledverde = 4;
int ledvermelho = 5;


//OS COMANDOS ABAIXO SÃO EXCLUSIVOS DA BIBLIOTECA E DISPONÍVEIS PARA PESQUISA
//PODEM HAVER DECLARAÇÕES SEMELHANTES A UM CÓDIGO COMUM DO ARDUINO MAS NA BIBLIOTECA SÃO ADAPTADOS
//E TRANSFORMADAS EM FUNÇÕES MODIFICADAS PARA LEITURA DO SENSOR

long readUltrasonicDistance(int triggerPin, int echoPin)
{
  //Define inicialmente o pino do trigger como LOW para 2ms
  pinMode(triggerPin, OUTPUT);
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);

  //Define o pino do trigger como HIGH para 10ms
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);

  //Após obter a leitura ativa o pino echo
  pinMode(echoPin, INPUT);
  return pulseIn(echoPin, HIGH);
}

void setup()
{
  Serial.begin(9600); //Velocidade de leitura e escrita (default) do monitor serial

  pinMode(2, OUTPUT); //Define o pino 2 como saída
  pinMode(3, OUTPUT); //Define o pino 3 como saída
  pinMode(4, OUTPUT); //Define o pino 4 como saída
  pinMode(5, OUTPUT); //Define o pino 5 como saída

  //DEVE SER CONFIGURADO - ESTIPULA-SE CERCA DE 50cm PARA AS BANCADAS
  distanciamaxima = 70; //Define a distância máxima para que os LEDs comecem a acender
}

void loop()
{
  posicaocm = 0.01723 * readUltrasonicDistance(7, 6); //A biblioteca converte o valor lido pelo sensor em um valor em cm


  Serial.print(posicaocm); //Escreve a posição da mão em cm
  Serial.println("cm"); //Escreve cm pulando linha

  //Sobre a posição da mão:
  //Se for maior que a distância máxima estabelecida
  if (posicaocm > distanciamaxima) {
    //Define como apagado todos os LEDs
    digitalWrite(ledverde, LOW);
    digitalWrite(ledazul, LOW);
    digitalWrite(ledvermelho, LOW);
    digitalWrite(buzzer, LOW);
  }

  //Se estiver entre a distância máxima e dois terços (2/3) da distância máxima
  if (posicaocm <= distanciamaxima && posicaocm > (distanciamaxima * 2 / 3)) {
    //Define como aceso o LED VERDE
    digitalWrite(ledverde, HIGH);
    digitalWrite(ledazul, LOW);
    digitalWrite(ledvermelho, LOW);
    digitalWrite(buzzer, HIGH);
    delay(110);
    digitalWrite(buzzer, LOW);
    delay(110);
  }

  //Se estiver entre dois terços (2/3) da distância máxima e um terço (1/3) da distância máxima
  if (posicaocm <= (distanciamaxima * 2 / 3) && posicaocm > (distanciamaxima * 1 / 3)) {
    //Define como aceso o LED AZUL
    digitalWrite(ledverde, LOW);
    digitalWrite(ledazul, HIGH);
    digitalWrite(ledvermelho, LOW);
    digitalWrite(buzzer, HIGH);
    delay(70);
    digitalWrite(buzzer, LOW);
    delay(70);
  }

  //Se estivar menor que um terço (1/3) da distância máxima
  if (posicaocm <= (distanciamaxima * 1 / 3) && posicaocm > 10) {
    //Define como aceso o LED VERMELHO
    digitalWrite(ledverde, LOW);
    digitalWrite(ledazul, LOW);
    digitalWrite(ledvermelho, HIGH);
    digitalWrite(buzzer, HIGH);
    delay(30);
    digitalWrite(buzzer, LOW);
    delay(30);
  }

  if (posicaocm < 10) {
    digitalWrite(buzzer, HIGH);
  }

}
